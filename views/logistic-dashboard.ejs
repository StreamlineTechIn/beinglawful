<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Logistic Admin Panel</title>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" />
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f8f9fa;
      margin: 0;
      padding: 0;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
    }

    .navbar {
      background-color: #343a40;
      padding: 10px 20px;
    }

    .navbar-brand {
      color: white !important;
      font-size: 1.5rem;
      font-weight: bold;
    }

    .dropdown-menu {
      background-color: #343a40;
      border: none;
    }

    .dropdown-item {
      color: #f8f9fa;
      font-weight: 500;
    }

    .dropdown-item:hover {
      background-color: #495057;
      color: #f8f9fa;
    }

    .content {
      flex: 1;
      padding: 20px;
      width: 100%;
      overflow-x: auto;
    }

    .counter {
      background-color: #fff;
      border: 1px solid #dee2e6;
      border-radius: 5px;
      padding: 10px;
      margin-bottom: 15px;
      font-size: 1rem;
      font-weight: 500;
    }

    .counter span {
      margin-right: 20px;
    }

    .counter .total {
      color: #343a40;
    }

    .counter .pending {
      color: #fd7e14;
    }

    .counter .delivered {
      color: #28a745;
    }

    .table-container {
      width: 100%;
      height: calc(100vh - 150px); /* Adjusted for counter height */
      overflow-y: auto;
    }

    .table {
      width: 100%;
      table-layout: auto;
    }

    .table th,
    .table td {
      white-space: nowrap;
      padding: 8px;
    }

    .table th {
      position: sticky;
      top: 0;
      background-color: #343a40;
      color: white;
      z-index: 1;
    }

    .table td {
      cursor: pointer;
      transition: background-color 0.3s;
    }

    .table td:hover {
      background-color: #e9ecef;
    }

    .status-pending {
      color: #fd7e14;
      font-weight: 600;
    }

    .status-pack {
      color: #007bff;
      font-weight: 600;
    }

    .status-delivered {
      color: #28a745;
      font-weight: 600;
    }

    .btn-primary {
      background-color: #0069d9;
      border: none;
      padding: 5px 10px;
      font-size: 0.875rem;
    }

    .btn-primary:hover {
      background-color: #0056b3;
    }

    .delivery-number-input {
      display: none;
      width: 100%;
    }

    .selected-text {
      position: fixed;
      bottom: 20px;
      right: 20px;
      background-color: #343a40;
      color: white;
      padding: 10px 20px;
      border-radius: 5px;
      display: none;
      z-index: 1000;
    }

    .modal-content {
      border-radius: 8px;
    }

    .modal-header {
      background-color: #343a40;
      color: white;
    }

    .modal-footer {
      border-top: none;
    }

    @media (max-width: 768px) {
      .content {
        padding: 10px;
      }

      .counter {
        font-size: 0.875rem;
        padding: 8px;
      }

      .counter span {
        display: block;
        margin-bottom: 5px;
      }

      .table-container {
        height: calc(100vh - 130px);
      }

      .form-inline .form-control {
        width: 100%;
      }

      .form-inline .btn {
        width: 100%;
      }

      .selected-text {
        width: calc(100% - 40px);
        bottom: 10px;
        right: 10px;
        font-size: 0.875rem;
      }
    }
  </style>
</head>
<body>
  <!-- Navbar with Three-Dot Menu -->
  <nav class="navbar navbar-expand">
    <a class="navbar-brand" href="#">Logistic Portal</a>
    <div class="ml-auto">
      <div class="dropdown">
        <button class="btn btn-dark dropdown-toggle" type="button" id="menuDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          <span class="navbar-toggler-icon">â‹®</span>
        </button>
        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="menuDropdown">
          <a class="dropdown-item" href="/logistic-dashboard">Dashboard</a>
          <a class="dropdown-item" href="/logout">Logout</a>
        </div>
      </div>
    </div>
  </nav>

  <div class="content">
    <h3 class="mb-3">Approved Schools</h3>

    <!-- Counter Display -->
    <div class="counter">
      <span class="total">Total Schools: <span id="totalCount"><%= schools.length %></span></span>
      <span class="pending">Pending: <span id="pendingCount"><%= schools.filter(s => s.status === 'pending').length %></span></span>
      <span class="delivered">Delivered: <span id="deliveredCount"><%= schools.filter(s => s.status === 'delivered').length %></span></span>
    </div>

    <!-- Selected Text Notification -->
    <div class="selected-text" id="selectedText"></div>

    <!-- Table Container -->
    <div class="table-container">
      <table class="table table-bordered table-striped">
        <thead class="thead-dark">
          <tr>
            <th>School Name</th>
            <th>Event Date</th>
            <th>City</th>
            <th>District</th>
            <th>Status</th>
            <th>Delivery Mode</th>
            <th>Change Status</th>
            <th>Civics Sir Number</th>
            <th>School Phone Number</th>
            <th>Principal Number</th>
            <!-- <th>Agency</th> -->
          </tr>
        </thead>
        <tbody>
          <% if (schools.length === 0) { %>
            <tr><td colspan="11">No schools found.</td></tr>
          <% } else { %>
            <% schools.forEach(school => { %>
              <tr>
                <td><%= school.name %></td>
                <td><%= school.eventDate %></td>
                <td><%= school.city %></td>
                <td><%= school.district %></td>
                <td class="status-cell" data-id="<%= school.id %>">
                  <% if (school.status === 'delivered') { %>
                    <span class="status-delivered">Delivered</span>
                  <% } else if (school.status === 'pack') { %>
                    <span class="status-pack">Pack</span>
                  <% } else { %>
                    <span class="status-pending">Pending</span>
                  <% } %>
                </td>
                <td class="delivery-mode-cell" data-id="<%= school.id %>" data-toggle="modal" data-target="#deliveryModal" data-delivery-mode="<%= school.deliveryMode %>" data-delivery-number="<%= school.deliveryNumber %>">
                  <%= school.deliveryMode || 'Pending' %> <%= school.deliveryNumber ? `(${school.deliveryNumber})` : '' %>
                </td>
                <td>
                  <form method="POST" action="/update-status" class="form-inline update-status-form" data-id="<%= school.id %>">
                    <input type="hidden" name="id" value="<%= school.id %>">
                    <select name="status" class="form-control mr-2">
                      <option value="pending" <%= school.status === 'pending' ? 'selected' : '' %>>Pending</option>
                      <option value="pack" <%= school.status === 'pack' ? 'selected' : '' %>>Pack</option>
                      <option value="delivered" <%= school.status === 'delivered' ? 'selected' : '' %>>Delivered</option>
                    </select>
                    <button type="submit" class="btn btn-sm btn-primary">Submit</button>
                  </form>
                </td>
                <td><%= school.civicsSirNumber %></td>
                <td><%= school.schoolPhoneNumber %></td>
                <td><%= school.principalNumber %></td>
                <!-- <td><%= school.agency || '' %></td> -->
              </tr>
            <% }); %>
          <% } %>
        </tbody>
      </table>
    </div>
  </div>

  <!-- Delivery Mode Update Modal -->
  <div class="modal fade" id="deliveryModal" tabindex="-1" role="dialog" aria-labelledby="deliveryModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="deliveryModalLabel">Update Delivery Mode</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <form method="POST" action="/update-delivery" id="deliveryModalForm">
          <div class="modal-body">
            <input type="hidden" name="id" id="modalSchoolId">
            <div class="form-group">
              <label for="modalDeliveryMode">Delivery Mode</label>
              <select name="deliveryMode" id="modalDeliveryMode" class="form-control">
                <option value="pending">Pending</option>
                <option value="by hand">By Hand</option>
                <option value="post">Post</option>
                <option value="train">Train</option>
                <option value="bus">Bus</option>
                <option value="courier">Courier</option>
              </select>
            </div>
            <div class="form-group">
              <label for="modalDeliveryNumber">Delivery Number (if applicable)</label>
              <input type="text" name="deliveryNumber" id="modalDeliveryNumber" class="form-control delivery-number-input" placeholder="Enter barcode">
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-primary">Submit</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Bootstrap JS and dependencies -->
  <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>

  <script>
    // Function to update counter display
    function updateCounter() {
      const totalCount = document.querySelectorAll('.status-cell').length;
      const pendingCount = document.querySelectorAll('.status-cell .status-pending').length;
      const deliveredCount = document.querySelectorAll('.status-cell .status-delivered').length;

      document.getElementById('totalCount').textContent = totalCount;
      document.getElementById('pendingCount').textContent = pendingCount;
      document.getElementById('deliveredCount').textContent = deliveredCount;
    }

    // Handle status updates
    document.querySelectorAll('.update-status-form').forEach(form => {
      form.addEventListener('submit', async function (e) {
        e.preventDefault();

        const id = this.getAttribute('data-id');
        const status = this.querySelector('select[name="status"]').value;

        try {
          const response = await fetch('/update-status', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: new URLSearchParams({ id, status })
          });

          if (response.ok) {
            const statusCell = document.querySelector(`.status-cell[data-id="${id}"]`);
            let statusHTML = '';

            if (status === 'delivered') {
              statusHTML = '<span class="status-delivered">Delivered</span>';
            } else if (status === 'pack') {
              statusHTML = '<span class="status-pack">Pack</span>';
            } else {
              statusHTML = '<span class="status-pending">Pending</span>';
            }

            statusCell.innerHTML = statusHTML;
            updateCounter(); // Update counter after status change
          } else {
            alert('Failed to update status.');
          }
        } catch (err) {
          console.error('Error:', err);
          alert('Error updating status.');
        }
      });
    });

    // Handle delivery mode cell click to open modal
    document.querySelectorAll('.delivery-mode-cell').forEach(cell => {
      cell.addEventListener('click', function () {
        const id = this.getAttribute('data-id');
        const deliveryMode = this.getAttribute('data-delivery-mode') || 'pending';
        const deliveryNumber = this.getAttribute('data-delivery-number') || '';

        // Populate modal fields
        document.getElementById('modalSchoolId').value = id;
        document.getElementById('modalDeliveryMode').value = deliveryMode;
        document.getElementById('modalDeliveryNumber').value = deliveryNumber;

        // Show/hide delivery number input based on selected mode
        const numberInput = document.getElementById('modalDeliveryNumber');
        numberInput.style.display = (deliveryMode === 'bus' || deliveryMode === 'train' || deliveryMode === 'post') ? 'block' : 'none';

        // Update delivery number visibility on mode change
        document.getElementById('modalDeliveryMode').addEventListener('change', function () {
          numberInput.style.display = (this.value === 'bus' || this.value === 'train' || this.value === 'post') ? 'block' : 'none';
        });
      });
    });

    // Handle delivery mode form submission
    document.getElementById('deliveryModalForm').addEventListener('submit', async function (e) {
      e.preventDefault();

      const formData = new FormData(this);
      const data = Object.fromEntries(formData);

      try {
        const response = await fetch('/update-delivery', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/x-www-form-urlencoded'
          },
          body: new URLSearchParams(data)
        });

        if (response.ok) {
          const id = data.id;
          const deliveryMode = data.deliveryMode;
          const deliveryNumber = data.deliveryNumber;
          const cell = document.querySelector(`.delivery-mode-cell[data-id="${id}"]`);
          cell.textContent = deliveryNumber ? `${deliveryMode} (${deliveryNumber})` : deliveryMode;
          cell.setAttribute('data-delivery-mode', deliveryMode);
          cell.setAttribute('data-delivery-number', deliveryNumber);
          $('#deliveryModal').modal('hide');
        } else {
          alert('Failed to update delivery details.');
        }
      } catch (err) {
        console.error('Error:', err);
        alert('Error updating delivery details.');
      }
    });

    // Handle table cell click to show text (excluding delivery mode cells)
    document.querySelectorAll('.table td:not(.delivery-mode-cell)').forEach(cell => {
      cell.addEventListener('click', function (e) {
        if (e.target.tagName !== 'INPUT' && e.target.tagName !== 'SELECT' && e.target.tagName !== 'BUTTON') {
          const text = this.textContent.trim();
          if (text) {
            const selectedTextDiv = document.getElementById('selectedText');
            selectedTextDiv.textContent = `Selected: ${text}`;
            selectedTextDiv.style.display = 'block';
            setTimeout(() => {
              selectedTextDiv.style.display = 'none';
            }, 3000);
            this.style.backgroundColor = '#d1ecf1';
            setTimeout(() => {
              this.style.backgroundColor = '';
            }, 1000);
          }
        }
      });
    });

    // Initialize counter on page load
    updateCounter();
  </script>
</body>
</html>