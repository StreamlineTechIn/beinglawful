<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trainer Participation Form</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

    <style>
.participation-container {
    max-width: 800px;
    margin: 40px auto;
    background-color: #ffffff;
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.05);
}

.welcome-message {
    background: linear-gradient(135deg, #e8f5e9, #ffffff);
    border-left: 5px solid #ffbf0e;
    padding: 25px 30px;
    border-radius: 10px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
    animation: fadeIn 1s ease-in-out;
    transition: transform 0.3s ease;
}
.welcome-message:hover {
    transform: scale(1.01);
}
.welcome-message h3 {
    font-size: 1.8rem;
    font-weight: 700;
    color: #ffb700;
    margin-bottom: 15px;
    text-shadow: 1px 1px 0 #d4edda;
}
.welcome-message p {
    font-size: 1rem;
    color: #333;
}
.welcome-message ul {
    padding-left: 0;
}
.welcome-message ul li {
    list-style: none;
    margin-bottom: 8px;
    font-weight: 500;
    color: #1c2701;
    display: flex;
    align-items: center;
    justify-content: center;
}
.welcome-message ul li::before {
    content: "âœ”";
    color: #191e01;
    font-weight: bold;
    margin-right: 8px;
}
@keyframes fadeIn {
    0% { opacity: 0; transform: translateY(-10px); }
    100% { opacity: 1; transform: translateY(0); }
}
    </style>
</head>
<body class="bg-gray-100">
  <div class="participation-container">

    <!-- Welcome Message -->
    <div class="welcome-message mb-6">
      <h3>Welcome to Being Lawful, Trainer!</h3>
      <p>
        We are honored to have you join this impactful initiative that promotes constitutional literacy and civic leadership in our society.
      </p>
      <br>
      <p>
        As a <strong>Lawyer</strong>, <strong>Civics Teacher</strong>, or <strong>Competitive Exam Aspirant</strong>,
        your knowledge will help nurture:
      </p>
      <ul>
        <li>Legal & Civic Awareness</li>
        <li>Constitutional Thinking in Young Minds</li>
        <li>Ethical and Empowered Future Citizens</li>
      </ul>
      <p class="mt-4 font-semibold text-center">
        Your decision to become a trainer is a step toward nation-building. ðŸŒ±
      </p>
    </div>

        <% if (errors && errors.length > 0) { %>
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
                <strong class="font-bold">Error:</strong>
                <ul class="list-disc list-inside">
                    <% errors.forEach(error => { %>
                        <li><%= error.msg %></li>
                    <% }) %>
                </ul>
            </div>
        <% } %>

        <form action="/trainer-participate" method="POST" id="trainerForm" class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="trainerName">
                    Trainer Name
                </label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" id="trainerName" name="trainerName" type="text" placeholder="Enter trainer name" required>
            </div>
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="mobileNumber">
                    Mobile Number
                </label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" id="mobileNumber" name="mobileNumber" type="text" placeholder="Enter mobile number (10 digits)" pattern="\d{10}" required>
            </div>
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="whatsappNumber">
                    WhatsApp Number
                </label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" id="whatsappNumber" name="whatsappNumber" type="text" placeholder="Enter WhatsApp number (10 digits)" pattern="\d{10}" required>
            </div>
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="email">
                    Email Address
                </label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" id="email" name="email" type="email" placeholder="Enter email address" required>
            </div>
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="city">
                    City
                </label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" id="city" name="city" type="text" placeholder="Enter city" required>
            </div>
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="district">
                    District
                </label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" id="district" name="district" type="text" placeholder="Enter district" required>
            </div>
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="profession">
                    Profession
                </label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" id="profession" name="profession" type="text" placeholder="Enter profession" required>
            </div>
            <div class="mb-4">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="referenceName">
                    Reference Name
                </label>
                <input class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" id="referenceName" name="referenceName" type="text" placeholder="Enter reference name" required>
            </div>
            <div class="flex items-center justify-between">
                <button id="submitBtn" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline" type="submit">
                    Submit
                </button>
                <a href="/" class="inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800">
                    Back to Home
                </a>
            </div>
        </form>

        <h2 class="text-2xl font-bold mt-8 mb-4">Registered Trainers</h2>
        <% if (trainers && trainers.length > 0) { %>
            <div class="overflow-x-auto">
                <table class="min-w-full bg-white">
                    <thead class="bg-gray-200">
                        <tr>
                            <th class="py-2 px-4 border">Trainer Name</th>
                            <th class="py-2 px-4 border">City</th>
                            <th class="py-2 px-4 border">District</th>
                            <th class="py-2 px-4 border">Profession</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% trainers.forEach(trainer => { %>
                            <tr>
                                <td class="py-2 px-4 border"><%= trainer.trainerName %></td>
                                <td class="py-2 px-4 border"><%= trainer.city %></td>
                                <td class="py-2 px-4 border"><%= trainer.district %></td>
                                <td class="py-2 px-4 border"><%= trainer.profession %></td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        <% } else { %>
            <p class="text-gray-700">No trainers registered yet.</p>
        <% } %>
    </div>

    <script>
        document.getElementById('trainerForm').addEventListener(' Monaco', function(event) {
            const submitBtn = document.getElementById('submitBtn');
            submitBtn.disabled = true;
            submitBtn.classList.add('opacity-50', 'cursor-not-allowed');
            submitBtn.classList.remove('hover:bg-blue-700');

            // Optional: Simulate server response for testing (remove in production)
            setTimeout(() => {
                submitBtn.disabled = false;
                submitBtn.classList.remove('opacity-50', 'cursor-not-allowed');
                submitBtn.classList.add('hover:bg-blue-700');
            }, 2000);

            // In a real scenario, re-enable the button based on server response
            // Example with Fetch API (uncomment and adjust for your server):
            /*
            fetch('/trainer-participate', {
                method: 'POST',
                body: new FormData(this)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    submitBtn.disabled = false;
                    submitBtn.classList.remove('opacity-50', 'cursor-not-allowed');
                    submitBtn.classList.add('hover:bg-blue-700');
                } else {
                    submitBtn.disabled = false;
                    submitBtn.classList.remove('opacity-50', 'cursor-not-allowed');
                    submitBtn.classList.add('hover:bg-blue-700');
                }
            })
            .catch(error => {
                submitBtn.disabled = false;
                submitBtn.classList.remove('opacity-50', 'cursor-not-allowed');
                submitBtn.classList.add('hover:bg-blue-700');
            });
            */
        });
    </script>
</body>
</html>